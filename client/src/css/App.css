.container {
  display: grid;
  grid: auto-flow dense / repeat(auto-fit, 300px);
  grid-gap: 10px;
  justify-content: center;
  align-content: center;
  align-items: center;
  width: 95%;
  padding: 6vh 1rem;
  margin: 0 auto;
  min-height: 100vh;
}

@media only screen and (max-width: 480px) {
  .container {
    grid: auto-flow / 1fr;
    justify-items: center;
  }
}

.link {
  text-decoration: none;
  color: inherit;
}

.link:visited {
  color: inherit;
}

.input, .textarea {
  font-size: 1.6rem;
  color: slateblue;
  height: 4rem;
  display: block;
  padding: 0 0.5rem;
  border: 1px solid rgb(69, 69, 69);
}

.label {
  font-size: 2rem;
  color: slateblue;
  display: block;
  margin: 1rem 2rem;
}

.whiteBox {
  background-color: rgb(255, 255, 255);
  box-shadow: 0px 5px 10px -5px black;
  border-radius: 15px;
}

.Heading {
  font-size: 3rem;
  text-align: center;
  padding: 1rem 0;
}

.Loading {
  animation-name: Loading;
  animation-duration: 1s;
  background-image: linear-gradient(#000 50%, #dac 50%);
  animation-iteration-count: infinite;
  border-radius: 50%;
  margin: 2rem auto;
  width: 5rem;
  height: 5rem;
  justify-self: center;
}

.Loading:after {
  content: "";
  position: absolute;
  transform: scale(0.8);
  left: 10%;
  top: 10%;
  border-radius: 50%;
  width: 4rem;
  height: 4rem;
  background: #dac;
}

@keyframes Loading {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(720deg);
  }
}

.Button {
  margin: 2rem;
  border: 0;
  padding: 2rem;
  text-align: center;
  display: block;
  font-size: 2.4rem;
  color: white;
  text-decoration: none;
  cursor: pointer;
}

.Button:focus, .Button:active, .Button:hover {
  outline: none;
  cursor: pointer;
  /* box-shadow: 0px 10px 5px -5px black; */
}

.Error {
  background-color: hsl(10, 80%, 40%);
  color: white;
  margin: 0 auto;
  overflow: hidden;
  font-size: 1.5rem;
  padding: 0.5rem;
}

.page-enter {
  opacity: 0;
  transform: scale(0.9);
}

.page-enter-active {
  opacity: 1;
  transform: scale(1.0);
  transition: opacity 1000ms, transform 300ms;
}

.page-enter-done {
  transition: 200ms linear;
}

/*
  Hiding the component to avoid having it be pushed down under the new Component while its going
  through its exit transition.
*/
.page-exit {
  display: none;
}

.page-exit-active {
  display: none;
}